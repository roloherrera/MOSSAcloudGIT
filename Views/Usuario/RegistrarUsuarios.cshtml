@model G7.Models.UsuarioObj

@{
    ViewBag.Title = "RegistrarUsuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("PrimerRegistro", "Usuario", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="card d-flex justify-content-center align-items-center">
        <div class="row">
            <div class="col-12">

                <div class="card-header">
                    <h3 class="card-title" text-allaing="center">Registrar Usuario</h3>
                </div>

                <div class="card-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="container rounded p-4">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", style = "width:200%;" } })
                                    <div id="NombreError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Apellido1, "Primer Apellido", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Apellido1, new { htmlAttributes = new { @class = "form-control", style = "width:200%;" } })
                                    <div id="Apellido1Error" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Apellido1, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Apellido2, "Segundo Apellido", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Apellido2, new { htmlAttributes = new { @class = "form-control", style = "width:200%;" } })
                                    <div id="Apellido2Error" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Apellido2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", style = "width:100%;", pattern = "^[0-9]{9}$", title = "Debe ingresar 9 dígitos numéricos." } })
                                    <div id="CedulaError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control", style = "width:100%;" } })
                                    <div id="TelefonoError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "width:200%;", type = "email", data_val_email = "El campo Email no es una dirección de correo electrónico válida" } })
                                    <div id="EmailError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Genero, new SelectList(new[]
                                        {
                                            new SelectListItem { Text = "Masculino", Value = "Masculino" },
                                            new SelectListItem { Text = "Femenino", Value = "Femenino" },
                                            new SelectListItem { Text = "Otro", Value = "Otro" }
                                        }, "Value", "Text"), new { @class = "form-control" })
                                        <div id="GeneroError" class="invalid-feedback"></div>
                                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control", style = "width:100%;", type = "date" } })
                                    <div id="FechaNacimientoError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Contrasenna, "Contraseña", htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Contrasenna, new { htmlAttributes = new { @class = "form-control", style = "width:200%;" } })
                                    <div id="ContrasennaError" class="invalid-feedback"></div>
                                    @Html.ValidationMessageFor(model => model.Contrasenna, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">


                            <script>
                            // validar que la fecha ingresada sea válida
                            $(function () {
                                $('#FechaNacimiento').on('blur', function () {
                                    var fecha = $(this).val();
                                    var esFechaValida = moment(fecha, 'YYYY-MM-DD', true).isValid();
                                    if (!esFechaValida) {
                                        alert('La fecha ingresada no es válida.');
                                        $(this).val('');
                                    }
                                });
                            });

                            // solo aceptar un input tipo fecha en el formato deseado
                            $(function () {
                                $('#FechaNacimiento').on('input', function () {
                                    var fecha = $(this).val();
                                    var fechaValida = /^\d{4}\-\d{2}\-\d{2}$/.test(fecha);
                                    if (!fechaValida) {
                                        $(this).val('');
                                    }
                                });
                            });
                            </script>

                            <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
                            <script>
                            $(document).ready(function () {
                                $('#Nombre').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#NombreError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#NombreError').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Apellido1').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#Apellido1Error').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#Apellido1Error').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Apellido2').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#Apellido2Error').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#Apellido2Error').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Cedula').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#CedulaError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#CedulaError').hide();
                                    }
                                });
                            })
                            $(document).ready(function () {
                                $('#Telefono').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#TelefonoError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#CedulaError').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Genero').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#GeneroError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#GeneroError').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#FechaNacimiento').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#FechaNacimientoError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#FechaNacimientoError').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Contrasenna').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#ContrasennaError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#ContrasennaError').hide();
                                    }
                                });
                            });
                            $(document).ready(function () {
                                $('#Email').blur(function () {
                                    if ($(this).val().trim() == '') {
                                        $(this).addClass('is-invalid');
                                        $('#EmailError').text('Este campo es obligatorio').show();
                                    } else {
                                        $(this).removeClass('is-invalid');
                                        $('#EmailError').hide();
                                    }
                                });
                            })

                            </script>


                            <br>
                            <br>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" method="post" class="btn btn-primary mr-2" id="registro-btn" disabled data-toggle="modal" data-target="#RegistroModal">
                                        <i class="fas fa-user-plus mr-2" onclick="limpiarFormulario();document.getElementById('registro-btn').disabled = true;"></i> Registrar
                                    </button>

                                    @Html.ActionLink("Regresar", "MostrarUsuarios", "Usuario", null, new { @class = "btn btn-secondary" })
                                </div>
                            </div>

                            <script>
                            function limpiarFormulario() {
                                document.getElementById("registro-btn").reset();
                            }
                            </script>


                            <script>
                            // Obtener los campos de entrada del formulario
                            const inputNombre = document.getElementById("Nombre");
                            const inputApellido1 = document.getElementById("Apellido1");
                            const inputApellido2 = document.getElementById("Apellido2");
                            const inputCedula = document.getElementById("Cedula");
                            const inputTelefono = document.getElementById("Telefono");
                            const inputEmail = document.getElementById("Email");
                            const inputFechaNacimiento = document.getElementById("FechaNacimiento");
                            const inputContrasenna = document.getElementById("Contrasenna");

                            // Obtener el botón de registro
                            const btnRegistro = document.getElementById("registro-btn");

                            // Agregar un event listener a cada campo de entrada para validar el formulario
                            inputNombre.addEventListener("input", validarFormulario);
                            inputApellido1.addEventListener("input", validarFormulario);
                            inputApellido2.addEventListener("input", validarFormulario);
                            inputCedula.addEventListener("input", validarFormulario);
                            inputTelefono.addEventListener("input", validarFormulario);
                            inputEmail.addEventListener("input", validarFormulario);

                            inputFechaNacimiento.addEventListener("input", validarFormulario);
                            inputContrasenna.addEventListener("input", validarFormulario);

                            // Función para validar el formulario
                            function validarFormulario() {
                                // Obtener los valores de los campos de entrada
                                const Nombre = inputNombre.value.trim();
                                const Apellido1 = inputApellido1.value.trim();
                                const Apellido2 = inputApellido2.value.trim();
                                const Cedula = inputCedula.value.trim();
                                const Telefono = inputTelefono.value.trim();
                                const Email = inputEmail.value.trim();

                                const FechaNacimiento = inputFechaNacimiento.value.trim();
                                const Contrasenna = inputContrasenna.value.trim();

                                // Validar que los campos no estén vacíos
                                if (Nombre === "" || Apellido1 === "" || Apellido2 === "" || Cedula === "" || Telefono === "" || Email === ""
                                    || FechaNacimiento === "" || Contrasenna === "") {
                                    btnRegistro.disabled = true;
                                } else {
                                    btnRegistro.disabled = false;
                                }
                            }
                            </script>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
